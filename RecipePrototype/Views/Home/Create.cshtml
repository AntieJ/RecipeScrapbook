@model RecipePrototype.Models.Recipe

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Recipe</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Method, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Method, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Method, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Ingredients, htmlAttributes: new { @class = "control-label col-md-2" })
            <div onclick= "addRow()" style="color: Blue; text-decoration: underline;">
                Add ingredient
            </div>
            <div class="col-md-10">
                @*@for (int i = 0; i < ingredientQuantity; i++)
            {
                    <p>Name:</p>@Html.TextBoxFor(model=>model.Ingredients[i].Name)
                    <p>Quantity:</p>@Html.TextBoxFor(model => model.Ingredients[i].Quantity)
            }*@
                
                <div id="ingredientBoxes">
                    <p>Name:</p>@Html.TextBoxFor(model => model.Ingredients[0].Name)
                    <p>Quantity:</p>@Html.TextBoxFor(model => model.Ingredients[0].Quantity)
                </div>
            </div>
            </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WeightWatchersPoints, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WeightWatchersPoints, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WeightWatchersPoints, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MealType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.MealType, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MealType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HealthyRating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.HealthyRating, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.HealthyRating, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">
    var ingredientIndex = 0;

    function addRow() {
        
        //var myRow = "<p>Name:</p><input id=\"Ingredients_0__Name\" name=\"Ingredients[0].Name\" type=\"text\" value=\"\">";
        ingredientIndex = parseInt(ingredientIndex) + 1;
        //var myRow = 
        //    "<p>Name:</p><input id=\"Ingredients_"+ ingredientIndex + 
        //        "__Name\" name=\"Ingredients\" type=\"text\" value=\"\">";
        var entry = "<p>Name:</p><input id=\"Ingredients_"+ ingredientIndex +
            "__Name\" name=\"Ingredients[" + ingredientIndex +
            "].Name\" type=\"text\" value=\"\"><p>Quantity:</p><input id=\"Ingredients_"
        + ingredientIndex +"__Quantity\" name=\"Ingredients["+ ingredientIndex +"].Quantity\" type=\"text\" value=\"\">"

        $("#ingredientBoxes input:last").after(entry);

    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
